input {
  stdin {
  }
  jdbc {
	# mysql jdbc connection string to our backup databse  后面的test对应mysql中的test数据库
	  jdbc_connection_string => "jdbc:mysql://rm-bp1c5x1rhig246p88.mysql.rds.aliyuncs.com:3306/adbugnew"
	  # the user we wish to excute our statement as
	  jdbc_user => "adbug"
	  jdbc_password => "2YeoyszrQoUhzubO"
	  # the path to our downloaded jdbc driver
	  jdbc_driver_library => "/data/logstash-5.2.2/bin/jdbc_test/mysql-connector-java-5.1.40-bin.jar"
	  # the name of the driver class for mysql
	  jdbc_driver_class => "com.mysql.jdbc.Driver"
	  jdbc_paging_enabled => "true"
	  jdbc_page_size => "100000"
	  record_last_run=>true
	  use_column_value => true
	  tracking_column => "id"
	#以下对应着要执行的sql的绝对路径。
	  statement_filepath => "/data/logstash-5.2.2/bin/jdbc_test/subject.sql"
	#以下对应着要要保存的自定义字段的值。
	  last_run_metadata_path=>"/data/logstash-5.2.2/bin/jdbc_test/subject"
	#定时字段 各字段含义（由左至右）分、时、天、月、年，全部为*默认含义为每分钟都更新（测试结果，不同的话请留言指出）
	  schedule => "* * * * *"
	#设定ES索引类型
	  type => "jdbc"
  }
}
filter {
}
output {
  elasticsearch {
	  #ESIP地址与端口
	  hosts => "es-cn-v0h0bunvn001aaqko.elasticsearch.aliyuncs.com:9200"
	  user => elastic
	  password => Y5djQBVpHPWYH9tZ
	  #ES索引名称（自己定义的）
	  index => "subject_v1"
	  document_type => "subject_index"
	  #自增ID编号 对应的 es  _id 唯一主键
	  document_id => "%{id}"
  }
  stdout {
	#以JSON格式输出
	codec => json_lines
  }
}